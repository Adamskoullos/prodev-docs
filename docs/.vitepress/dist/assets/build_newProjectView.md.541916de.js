import{o as n,c as s,a}from"./app.2550f8b5.js";const t='{"title":"New project view","description":"","frontmatter":{},"relativePath":"build/newProjectView.md","lastUpdated":1617970618158}',p={},o=a('<h1 id="new-project-view"><a class="header-anchor" href="#new-project-view" aria-hidden="true">#</a> New project view</h1><p>Below is the template and script for the component. Each project is created with a title, description and cover image:</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>row<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">@submit.prevent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleSubmit<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>col-12<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{light: light}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{light: light}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Create new project<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Project title<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>title<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{light: light}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">required</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Description<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>description<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{light: light}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">required</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{light: light}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>file-upload<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>file-upload-button<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Upload project image<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>file-upload<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>file<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@change</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleChange<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>error<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{ fileError }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{light: light}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>!isPending<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Add new project<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{light: light}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>isPending<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>loading<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Uploading...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vue/reactivity&#39;</span>\n<span class="token keyword">import</span> useStorage <span class="token keyword">from</span> <span class="token string">&#39;../composables/useStorage&#39;</span>\n<span class="token keyword">import</span> useCollection <span class="token keyword">from</span> <span class="token string">&#39;../composables/useCollection&#39;</span>\n<span class="token keyword">import</span> getUser <span class="token keyword">from</span> <span class="token string">&#39;../composables/getUser&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> timestamp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../firebase/config&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> useRouter <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue-router&#39;</span>\n\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  props<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;light&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token keyword">const</span> title <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>\n    <span class="token keyword">const</span> description <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>\n    <span class="token keyword">const</span> projectImage <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>\n    <span class="token keyword">const</span> fileTypes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;image/png&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;image/jpeg&#39;</span><span class="token punctuation">]</span>\n    <span class="token keyword">const</span> fileError <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>\n    <span class="token keyword">const</span> isPending <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>\n\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> uploadImage<span class="token punctuation">,</span> error<span class="token punctuation">,</span> filePath<span class="token punctuation">,</span> url <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useStorage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> addDoc <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useCollection</span><span class="token punctuation">(</span><span class="token string">&#39;projects&#39;</span><span class="token punctuation">)</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> user <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">getUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">useRouter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n    <span class="token keyword">const</span> <span class="token function-variable function">handleSubmit</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span><span class="token punctuation">(</span>projectImage<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        isPending<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">true</span>\n        <span class="token keyword">await</span> <span class="token function">uploadImage</span><span class="token punctuation">(</span>projectImage<span class="token punctuation">.</span>value<span class="token punctuation">)</span>\n        <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">addDoc</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n          title<span class="token operator">:</span> title<span class="token punctuation">.</span>value<span class="token punctuation">,</span>\n          description<span class="token operator">:</span> description<span class="token punctuation">.</span>value<span class="token punctuation">,</span>\n          userId<span class="token operator">:</span> user<span class="token punctuation">.</span>value<span class="token punctuation">.</span>uid<span class="token punctuation">,</span>\n          userName<span class="token operator">:</span> user<span class="token punctuation">.</span>value<span class="token punctuation">.</span>displayName<span class="token punctuation">,</span>\n          imageUrl<span class="token operator">:</span> url<span class="token punctuation">.</span>value<span class="token punctuation">,</span>\n          filePath<span class="token operator">:</span> filePath<span class="token punctuation">.</span>value<span class="token punctuation">,</span>\n          tasks<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n          createdAt<span class="token operator">:</span> <span class="token function">timestamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>error<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">{</span>\n          isPending<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">false</span>\n          router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;SingleProject&#39;</span><span class="token punctuation">,</span> params<span class="token operator">:</span> <span class="token punctuation">{</span> id<span class="token operator">:</span> res<span class="token punctuation">.</span>id <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span> \n      projectImage<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">null</span>\n      title<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>\n      description<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>\n      fileError<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">null</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">const</span> <span class="token function-variable function">handleChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> selected <span class="token operator">=</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>files<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>\n      <span class="token keyword">if</span><span class="token punctuation">(</span>selected <span class="token operator">&amp;&amp;</span> fileTypes<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>selected<span class="token punctuation">.</span>type<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        projectImage<span class="token punctuation">.</span>value <span class="token operator">=</span> selected\n        fileError<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">null</span>\n      <span class="token punctuation">}</span> <span class="token keyword">else</span><span class="token punctuation">{</span>\n        projectImage<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">null</span>\n        fileError<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">&#39;Please select an image file, jpeg or png&#39;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">{</span> title<span class="token punctuation">,</span> description<span class="token punctuation">,</span> projectImage<span class="token punctuation">,</span> fileError<span class="token punctuation">,</span> handleSubmit<span class="token punctuation">,</span> handleChange<span class="token punctuation">,</span> error<span class="token punctuation">,</span> isPending <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><p>Practically the user fills out the title and description then clicks on the file upload button, when an image is chosen the above <code>handleChange</code> function is invoked, which checks if the image is either a jpeg or png file type and then if so assigns the image as the value of the <code>projectImage</code></p><p>Then the user clicks the <code>Add new project</code> button and invokes the <code>handleSubmit</code> function (above) which if an image is chosen, uploads the image to firebase storage and once the promise is resolved the <code>addDoc</code> function as invoked, also using the await keyword as the <code>addDoc</code> is an asynchronous function within the <code>useCollection</code> composable.</p><p>Once the response is returned from Firebase Firestore the user is pushed to the project view where they can add tasks.</p><p>Below is the <code>uploadImage</code> function from the <code>useStorage</code> composable and beneath that the <code>addDoc</code> snippet from the <code>useCollection</code> composable:</p><div class="language-js"><pre><code><span class="token keyword">const</span> <span class="token function-variable function">uploadImage</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        filePath<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">projectImages/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>user<span class="token punctuation">.</span>value<span class="token punctuation">.</span>uid<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span>\n        <span class="token keyword">const</span> storageRef <span class="token operator">=</span> fStorage<span class="token punctuation">.</span><span class="token function">ref</span><span class="token punctuation">(</span>filePath<span class="token punctuation">.</span>value<span class="token punctuation">)</span>\n        <span class="token keyword">try</span><span class="token punctuation">{</span>\n            <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> storageRef<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span>\n            url<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">await</span> res<span class="token punctuation">.</span>ref<span class="token punctuation">.</span><span class="token function">getDownloadURL</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">catch</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>\n            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span>message<span class="token punctuation">)</span>\n            error<span class="token punctuation">.</span>value <span class="token operator">=</span> err<span class="token punctuation">.</span>message\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n</code></pre></div><div class="language-js"><pre><code><span class="token keyword">const</span> <span class="token function-variable function">addDoc</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">doc</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        error<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">null</span>\n        isPending<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">true</span>\n        <span class="token keyword">try</span><span class="token punctuation">{</span>\n            <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> fStore<span class="token punctuation">.</span><span class="token function">collection</span><span class="token punctuation">(</span>collection<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>doc<span class="token punctuation">)</span>\n            isPending<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">false</span>\n            <span class="token keyword">return</span> res\n        <span class="token punctuation">}</span>\n        <span class="token keyword">catch</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>\n            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span>message<span class="token punctuation">)</span>\n            isPending<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">false</span>\n            error<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">&#39;Unable to send this message&#39;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n</code></pre></div>',9);p.render=function(a,t,p,e,c,u){return n(),s("div",null,[o])};export default p;export{t as __pageData};
