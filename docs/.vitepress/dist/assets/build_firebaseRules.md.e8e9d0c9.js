import{o as s,c as a,a as n}from"./app.2550f8b5.js";const t='{"title":"FireBase Rules","description":"","frontmatter":{},"headers":[{"level":2,"title":"Firestore Rules:","slug":"firestore-rules"},{"level":2,"title":"Storage Rules:","slug":"storage-rules"}],"relativePath":"build/firebaseRules.md","lastUpdated":1618041278991}',p={},e=n('<h1 id="firebase-rules"><a class="header-anchor" href="#firebase-rules" aria-hidden="true">#</a> FireBase Rules</h1><p>Before fully testing functionality we need to set up the firestore and storage rules with firebase otherwise we will keep getting errors even if the code is all good. So lets get that setup for all collections a storage items now:</p><h2 id="firestore-rules"><a class="header-anchor" href="#firestore-rules" aria-hidden="true">#</a> Firestore Rules:</h2><div class="language-js"><pre><code>\nrules_version <span class="token operator">=</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">;</span>\nservice cloud<span class="token punctuation">.</span>firestore <span class="token punctuation">{</span>\n  match <span class="token operator">/</span>databases<span class="token operator">/</span><span class="token punctuation">{</span>database<span class="token punctuation">}</span><span class="token operator">/</span>documents <span class="token punctuation">{</span>\n    match <span class="token operator">/</span>projects<span class="token operator">/</span><span class="token punctuation">{</span>docId<span class="token punctuation">}</span> <span class="token punctuation">{</span>\n      allow read<span class="token punctuation">,</span> create<span class="token operator">:</span> <span class="token keyword">if</span> request<span class="token punctuation">.</span>auth <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n      allow <span class="token keyword">delete</span><span class="token punctuation">,</span> update<span class="token operator">:</span> <span class="token keyword">if</span> request<span class="token punctuation">.</span>auth<span class="token punctuation">.</span>uid <span class="token operator">==</span> resource<span class="token punctuation">.</span>data<span class="token punctuation">.</span>userId<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    match <span class="token operator">/</span>users<span class="token operator">/</span><span class="token punctuation">{</span>docId<span class="token punctuation">}</span><span class="token punctuation">{</span>\n        allow read<span class="token punctuation">,</span> write<span class="token operator">:</span> <span class="token keyword">if</span> request<span class="token punctuation">.</span>auth<span class="token punctuation">.</span>uid <span class="token operator">==</span> resource<span class="token punctuation">.</span>data<span class="token punctuation">.</span>userId<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    match <span class="token operator">/</span>messages<span class="token operator">/</span><span class="token punctuation">{</span>messagesId<span class="token punctuation">}</span> <span class="token punctuation">{</span>\n      allow read<span class="token punctuation">,</span> write<span class="token operator">:</span> <span class="token keyword">if</span> request<span class="token punctuation">.</span>auth <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    match <span class="token operator">/</span>bugs<span class="token operator">/</span><span class="token punctuation">{</span>bugId<span class="token punctuation">}</span> <span class="token punctuation">{</span>\n      allow read<span class="token punctuation">,</span> write<span class="token operator">:</span> <span class="token keyword">if</span> request<span class="token punctuation">.</span>auth <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n      allow <span class="token keyword">delete</span><span class="token punctuation">,</span> update<span class="token operator">:</span> <span class="token keyword">if</span> request<span class="token punctuation">.</span>auth<span class="token punctuation">.</span>uid <span class="token operator">==</span> resource<span class="token punctuation">.</span>data<span class="token punctuation">.</span>userId<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h2 id="storage-rules"><a class="header-anchor" href="#storage-rules" aria-hidden="true">#</a> Storage Rules:</h2><div class="language-js"><pre><code>\nrules_version <span class="token operator">=</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">;</span>\nservice firebase<span class="token punctuation">.</span>storage <span class="token punctuation">{</span>\n  match <span class="token operator">/</span>b<span class="token operator">/</span><span class="token punctuation">{</span>bucket<span class="token punctuation">}</span><span class="token operator">/</span>o <span class="token punctuation">{</span>\n    match <span class="token operator">/</span>projectImages<span class="token operator">/</span><span class="token punctuation">{</span>userId<span class="token punctuation">}</span><span class="token operator">/</span><span class="token punctuation">{</span>allPaths<span class="token operator">=</span><span class="token operator">**</span><span class="token punctuation">}</span> <span class="token punctuation">{</span>\n      allow read<span class="token punctuation">,</span> create<span class="token operator">:</span> <span class="token keyword">if</span> request<span class="token punctuation">.</span>auth <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n      allow <span class="token keyword">delete</span><span class="token operator">:</span> <span class="token keyword">if</span> request<span class="token punctuation">.</span>auth<span class="token punctuation">.</span>uid <span class="token operator">==</span> userId<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    match <span class="token operator">/</span>bugImages<span class="token operator">/</span><span class="token punctuation">{</span>userId<span class="token punctuation">}</span><span class="token operator">/</span><span class="token punctuation">{</span>allPaths<span class="token operator">=</span><span class="token operator">**</span><span class="token punctuation">}</span> <span class="token punctuation">{</span>\n      allow read<span class="token punctuation">,</span> create<span class="token operator">:</span> <span class="token keyword">if</span> request<span class="token punctuation">.</span>auth <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n      allow <span class="token keyword">delete</span><span class="token operator">:</span> <span class="token keyword">if</span> request<span class="token punctuation">.</span>auth<span class="token punctuation">.</span>uid <span class="token operator">==</span> userId<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div>',6);p.render=function(n,t,p,o,c,u){return s(),a("div",null,[e])};export default p;export{t as __pageData};
