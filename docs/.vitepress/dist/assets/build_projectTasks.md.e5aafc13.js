import{o as n,c as s,a}from"./app.2550f8b5.js";const t='{"title":"Project Tasks","description":"","frontmatter":{},"relativePath":"build/projectTasks.md","lastUpdated":1618042933566}',p={},o=a('<h1 id="project-tasks"><a class="header-anchor" href="#project-tasks" aria-hidden="true">#</a> Project Tasks</h1><p>Within the SingleProject view there is a nested AddTask component which has the props <code>document</code> passed down as <code>projects</code> (should have been called project):</p><div class="language-html"><pre><code>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>transition-group</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AddTask</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ownership<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:projects</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>document<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:light</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>light<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><p>The AddTask component has a simple form and below is the component script. Focusing on the <code>handleAddTask</code> async function, an object is defined <code>newTask</code> with the task property set to the value of the user input. Then the await keyword is used when invoking the <code>updateDoc</code> function which is destructed from the <code>useDocument</code> composable. This connects to Firestore and is itself an asynchronous function.</p><p>The <code>updateDoc</code> takes an input which is an object with the properties to be updated. The tasks array is to be updated so first we spread the existing tasks array in and then add the new task.</p><div class="language-html"><pre><code>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vue/reactivity&#39;</span>\n<span class="token keyword">import</span> useDocument <span class="token keyword">from</span> <span class="token string">&#39;../composables/useDocument&#39;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  props<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;projects&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;light&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> updateDoc <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useDocument</span><span class="token punctuation">(</span><span class="token string">&#39;projects&#39;</span><span class="token punctuation">,</span> props<span class="token punctuation">.</span>projects<span class="token punctuation">.</span>id<span class="token punctuation">)</span>\n    <span class="token keyword">const</span> task <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>\n    <span class="token keyword">const</span> addTask <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>\n    <span class="token keyword">const</span> isPending <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>\n    <span class="token keyword">const</span> inputEl <span class="token operator">=</span> ref<span class="token operator">&lt;</span>Element<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>\n\n    <span class="token keyword">const</span> <span class="token function-variable function">openForm</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      addTask<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">true</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">const</span> <span class="token function-variable function">handleAddTask</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      isPending<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">true</span>\n      addTask<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">true</span>\n      <span class="token keyword">const</span> newTask <span class="token operator">=</span> <span class="token punctuation">{</span>\n        task<span class="token operator">:</span> task<span class="token punctuation">.</span>value<span class="token punctuation">,</span>\n        completed<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n        id<span class="token operator">:</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">1000000000</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span>\n      <span class="token keyword">await</span> <span class="token function">updateDoc</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        tasks<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token operator">...</span>props<span class="token punctuation">.</span>projects<span class="token punctuation">.</span>tasks<span class="token punctuation">,</span> newTask<span class="token punctuation">]</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n      task<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>\n      isPending<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">false</span>\n      addTask<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">false</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">{</span> handleAddTask<span class="token punctuation">,</span> task<span class="token punctuation">,</span> addTask<span class="token punctuation">,</span> isPending<span class="token punctuation">,</span> inputEl<span class="token punctuation">,</span> openForm  <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div>',6);p.render=function(a,t,p,e,c,u){return n(),s("div",null,[o])};export default p;export{t as __pageData};
