import{o as n,c as s,a}from"./app.2550f8b5.js";const t='{"title":"Project Setup","description":"","frontmatter":{},"headers":[{"level":2,"title":"Setup Firebase","slug":"setup-firebase"},{"level":3,"title":"Backend","slug":"backend"},{"level":3,"title":"Frontend","slug":"frontend"},{"level":3,"title":"Connecting the frontend to firebase","slug":"connecting-the-frontend-to-firebase"},{"level":2,"title":"Setting up the Views and router","slug":"setting-up-the-views-and-router"},{"level":2,"title":"Managing a page reload","slug":"managing-a-page-reload"}],"relativePath":"build/gettingSetUp.md","lastUpdated":1618038456890}',e={},o=a('<h1 id="project-setup"><a class="header-anchor" href="#project-setup" aria-hidden="true">#</a> Project Setup</h1><ul><li>Create directory for the project and cd into it</li><li>Create Vue project using vue-cli adding vue-router</li><li>Strip all unused boilerplate files and folders</li><li>Add <code>main.css</code> (unless using SASS) for global styles to the assets folder and import into <code>main.js</code></li><li>Import any google fonts into <code>main.css</code> and set up basic global styles</li><li>As a default, <code>language</code> is not set within the <code>&lt;html&gt;</code> tag in <code>index.html</code> so do this now</li><li>Add a link to material icons within the head of <code>index.html</code></li><li>Install GSAP: <code>npm install gsap</code>, to be imported where used</li><li>Install Bootstrap 5: <code>npm install bootstrap@next</code></li><li>Import Bootstrap within <code>main.js</code>: <ul><li><code>import &quot;bootstrap/dist/css/bootstrap.min.css&quot;</code></li><li><code>import &quot;bootstrap&quot;</code></li></ul></li><li>Save, add the repo to GitHub and publish</li></ul><h2 id="setup-firebase"><a class="header-anchor" href="#setup-firebase" aria-hidden="true">#</a> Setup Firebase</h2><h3 id="backend"><a class="header-anchor" href="#backend" aria-hidden="true">#</a> Backend</h3><p>Must be signed up with firebase and be in the Firebase console:</p><ul><li>Create Firebase project</li><li>Create Firestore database (start in test mode for development)</li><li>Enable authentication methods (email, password, Google etc)</li></ul><h3 id="frontend"><a class="header-anchor" href="#frontend" aria-hidden="true">#</a> Frontend</h3><p>Open up a terminal:</p><ul><li>Install Firebase tools: <code>npm install -g firebase-tools</code> this is global and only needs to be installed on a machine once, not for each project</li><li><code>firebase init</code> adding Firestore and Storage</li><li>Use file names: <code>firestore.rules</code> and <code>storage.rules</code></li><li>Make sure to use <code>dist</code> as the public directory (if using Vue)</li></ul><p>here is the visual:</p><p><img src="https://user-images.githubusercontent.com/73107656/112598464-82c79d00-8e06-11eb-820f-2daedbe38ffd.png" alt="image"></p><h3 id="connecting-the-frontend-to-firebase"><a class="header-anchor" href="#connecting-the-frontend-to-firebase" aria-hidden="true">#</a> Connecting the frontend to firebase</h3><ul><li>Create <code>firebase</code> folder within <code>src</code> and <code>config.js</code> file within that</li><li>Install the firebase SDK for the project: <code>npm install firebase</code></li></ul><p>Within Firebase console:</p><ul><li>Create Firebase <code>web app</code> + add <code>hosting</code> and register the app</li><li>Project settings &gt; apps &gt; grab the config SDK snippet and copy into the <code>config.js</code> file within the <code>firebase</code> folder back in the frontend</li></ul><p>Back in the front end, set up the <code>config.js</code> file:</p><ul><li>Import Firebase core and services above the config SDK</li><li>Initialise Firebase</li><li>Initialise services</li><li>Save the firebase timestamp method to a const to be used as a field value within document objects, so a <code>createdAt</code> property can be created for each document.</li><li>Then finally export Firebase services and timestamp.</li></ul><p>Here is the visual:</p><p>SDK omitted</p><p><img src="https://user-images.githubusercontent.com/73107656/112611541-dab9d000-8e15-11eb-89e0-dcfc50d1d8e2.png" alt="Screenshot from 2021-03-26 09-29-24"></p><h2 id="setting-up-the-views-and-router"><a class="header-anchor" href="#setting-up-the-views-and-router" aria-hidden="true">#</a> Setting up the Views and router</h2><p>Before moving on to build out the main dashboard and navigation create each view and set up the router (index.js within the router folder). Note the route guard is added using Firebase authentication. The route guard uses <code>next()</code> instead of push() and must have <code>to</code>, <code>from</code> and <code>next</code> passed in. Once defined the route guard is used for each route that requires a logged in user before access:</p><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createRouter<span class="token punctuation">,</span> createWebHistory <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue-router&#39;</span>\n<span class="token keyword">import</span> Home <span class="token keyword">from</span> <span class="token string">&#39;../views/Home.vue&#39;</span>\n<span class="token keyword">import</span> TeamProjects <span class="token keyword">from</span> <span class="token string">&#39;../views/TeamProjects.vue&#39;</span>\n<span class="token keyword">import</span> MyProjects <span class="token keyword">from</span> <span class="token string">&#39;../views/MyProjects.vue&#39;</span>\n<span class="token keyword">import</span> NewProject <span class="token keyword">from</span> <span class="token string">&#39;../views/NewProject.vue&#39;</span>\n<span class="token keyword">import</span> Bugs <span class="token keyword">from</span> <span class="token string">&#39;../views/Bugs.vue&#39;</span>\n<span class="token keyword">import</span> NewBug <span class="token keyword">from</span> <span class="token string">&#39;../views/NewBug.vue&#39;</span>\n<span class="token keyword">import</span> Chat <span class="token keyword">from</span> <span class="token string">&#39;../views/Chat&#39;</span>\n<span class="token keyword">import</span> ReportIssue <span class="token keyword">from</span> <span class="token string">&#39;../views/ReportIssue&#39;</span>\n<span class="token keyword">import</span> Contact <span class="token keyword">from</span> <span class="token string">&#39;../views/Contact.vue&#39;</span>\n<span class="token keyword">import</span> Login <span class="token keyword">from</span> <span class="token string">&#39;../views/auth/Login.vue&#39;</span>\n<span class="token keyword">import</span> Signup <span class="token keyword">from</span> <span class="token string">&#39;../views/auth/Signup.vue&#39;</span>\n<span class="token keyword">import</span> SingleProject <span class="token keyword">from</span> <span class="token string">&#39;../views/SingleProject.vue&#39;</span>\n<span class="token keyword">import</span> SingleBug <span class="token keyword">from</span> <span class="token string">&#39;../views/SingleBug.vue&#39;</span>\n\n<span class="token keyword">import</span> <span class="token punctuation">{</span> fAuth <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../firebase/config&#39;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">requireAuth</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> <span class="token keyword">from</span><span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> user <span class="token operator">=</span> fAuth<span class="token punctuation">.</span>currentUser\n  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>user<span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;Home&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span> <span class="token keyword">else</span><span class="token punctuation">{</span>\n    <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> routes <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    path<span class="token operator">:</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">&#39;Home&#39;</span><span class="token punctuation">,</span>\n    component<span class="token operator">:</span> Home\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    path<span class="token operator">:</span> <span class="token string">&#39;/projects&#39;</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">&#39;TeamProjects&#39;</span><span class="token punctuation">,</span>\n    component<span class="token operator">:</span> TeamProjects<span class="token punctuation">,</span>\n    props<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    beforeEnter<span class="token operator">:</span> requireAuth\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    path<span class="token operator">:</span> <span class="token string">&#39;/projects/user&#39;</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">&#39;MyProjects&#39;</span><span class="token punctuation">,</span>\n    component<span class="token operator">:</span> MyProjects<span class="token punctuation">,</span>\n    props<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    beforeEnter<span class="token operator">:</span> requireAuth\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    path<span class="token operator">:</span> <span class="token string">&#39;/projects/new&#39;</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">&#39;NewProject&#39;</span><span class="token punctuation">,</span>\n    component<span class="token operator">:</span> NewProject<span class="token punctuation">,</span>\n    props<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    beforeEnter<span class="token operator">:</span> requireAuth\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    path<span class="token operator">:</span> <span class="token string">&#39;/projects/:id&#39;</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">&#39;SingleProject&#39;</span><span class="token punctuation">,</span>\n    component<span class="token operator">:</span> SingleProject<span class="token punctuation">,</span>\n    props<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    beforeEnter<span class="token operator">:</span> requireAuth\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    path<span class="token operator">:</span> <span class="token string">&#39;/bugs&#39;</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">&#39;Bugs&#39;</span><span class="token punctuation">,</span>\n    component<span class="token operator">:</span> Bugs<span class="token punctuation">,</span>\n    props<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    beforeEnter<span class="token operator">:</span> requireAuth\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    path<span class="token operator">:</span> <span class="token string">&#39;/bugs/new&#39;</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">&#39;NewBug&#39;</span><span class="token punctuation">,</span>\n    component<span class="token operator">:</span> NewBug<span class="token punctuation">,</span>\n    props<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    beforeEnter<span class="token operator">:</span> requireAuth\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    path<span class="token operator">:</span> <span class="token string">&#39;/bugs/:id&#39;</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">&#39;SingleBug&#39;</span><span class="token punctuation">,</span>\n    component<span class="token operator">:</span> SingleBug<span class="token punctuation">,</span>\n    props<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    beforeEnter<span class="token operator">:</span> requireAuth\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    path<span class="token operator">:</span> <span class="token string">&#39;/chat&#39;</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">&#39;Chat&#39;</span><span class="token punctuation">,</span>\n    component<span class="token operator">:</span> Chat<span class="token punctuation">,</span>\n    props<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    beforeEnter<span class="token operator">:</span> requireAuth\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    path<span class="token operator">:</span> <span class="token string">&#39;/issue&#39;</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">&#39;ReportIssue&#39;</span><span class="token punctuation">,</span>\n    component<span class="token operator">:</span> ReportIssue<span class="token punctuation">,</span>\n    props<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    beforeEnter<span class="token operator">:</span> requireAuth\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    path<span class="token operator">:</span> <span class="token string">&#39;/contact&#39;</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">&#39;Contact&#39;</span><span class="token punctuation">,</span>\n    component<span class="token operator">:</span> Contact<span class="token punctuation">,</span>\n    props<span class="token operator">:</span> <span class="token boolean">true</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    path<span class="token operator">:</span> <span class="token string">&#39;/login&#39;</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">&#39;Login&#39;</span><span class="token punctuation">,</span>\n    component<span class="token operator">:</span> Login<span class="token punctuation">,</span>\n    props<span class="token operator">:</span> <span class="token boolean">true</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    path<span class="token operator">:</span> <span class="token string">&#39;/signup&#39;</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">&#39;Signup&#39;</span><span class="token punctuation">,</span>\n    component<span class="token operator">:</span> Signup<span class="token punctuation">,</span>\n    props<span class="token operator">:</span> <span class="token boolean">true</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">]</span>\n\n<span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">createRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  history<span class="token operator">:</span> <span class="token function">createWebHistory</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">BASE_URL</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  routes\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> router\n\n</code></pre></div><p>At this stage of the build each view is just given an <code>&lt;h1&gt;</code> to verify view and also flexbox layout:</p><p><img src="https://user-images.githubusercontent.com/73107656/112617276-a85fa100-8e1c-11eb-8ec6-a1dfbd5bcb42.png" alt="Screenshot from 2021-03-26 10-18-44"></p><h2 id="managing-a-page-reload"><a class="header-anchor" href="#managing-a-page-reload" aria-hidden="true">#</a> Managing a page reload</h2><p>If a logged in user reloads the page we do not want them to get redirected to the home screen before Firebase has had chance to authenticate them. To prevent this we add the following pattern to <code>main.js</code>.</p><p>First declare <code>app</code>, then add Firebase authentication state change monitor and only if app has no value, create the app. If there is already a current user logged in this code will not re-run and the current view the user is on will get reloaded.</p><div class="language-js"><pre><code>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> createApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n<span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">&#39;./App.vue&#39;</span>\n<span class="token keyword">import</span> router <span class="token keyword">from</span> <span class="token string">&#39;./router&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> fAuth <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./firebase/config&#39;</span>\n<span class="token keyword">import</span> <span class="token string">&quot;bootstrap/dist/css/bootstrap.min.css&quot;</span>\n<span class="token keyword">import</span> <span class="token string">&quot;bootstrap&quot;</span>\n<span class="token keyword">import</span> <span class="token string">&#39;./assets/main.css&#39;</span>\n\n\n<span class="token keyword">let</span> app\n\nfAuth<span class="token punctuation">.</span><span class="token function">onAuthStateChanged</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>app<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>router<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div>',29);e.render=function(a,t,e,p,c,r){return n(),s("div",null,[o])};export default e;export{t as __pageData};
